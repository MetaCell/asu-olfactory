# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pub_chem_index.models.base_model_ import Model
from pub_chem_index import util


class Molecule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, synonyms=None):  # noqa: E501
        """Molecule - a model defined in OpenAPI

        :param synonyms: The synonyms of this Molecule.  # noqa: E501
        :type synonyms: List[str]
        """
        self.openapi_types = {
            'synonyms': List[str]
        }

        self.attribute_map = {
            'synonyms': 'synonyms'
        }

        self._synonyms = synonyms

    @classmethod
    def from_dict(cls, dikt) -> 'Molecule':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Molecule of this Molecule.  # noqa: E501
        :rtype: Molecule
        """
        return util.deserialize_model(dikt, cls)

    @property
    def synonyms(self):
        """Gets the synonyms of this Molecule.

        List of synonyms matching search query  # noqa: E501

        :return: The synonyms of this Molecule.
        :rtype: List[str]
        """
        return self._synonyms

    @synonyms.setter
    def synonyms(self, synonyms):
        """Sets the synonyms of this Molecule.

        List of synonyms matching search query  # noqa: E501

        :param synonyms: The synonyms of this Molecule.
        :type synonyms: List[str]
        """
        if synonyms is None:
            raise ValueError("Invalid value for `synonyms`, must not be `None`")  # noqa: E501

        self._synonyms = synonyms
